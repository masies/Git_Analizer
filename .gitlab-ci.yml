image: ubuntu:16.04


stages:
    - build
    - test
    - deploy
    - monitor



#################################################
#build

# build the backend
build_backend:
  script:
    - apt-get update
    - apt-get -y install sudo
    - apt-get -y install git
    - apt-get -y install curl
    - apt-get -y install libcurl3
    - apt-get -y install libarchive13
    - apt-get -y install maven
    - apt-get -y install openjdk-8-jdk
    - curl http://131.123.42.38/lmcrs/v1.0.0/srcml_1.0.0-1_ubuntu16.04.deb --output srcml_1.0.0-1_ubuntu16.04.deb
    - dpkg -i srcml_1.0.0-1_ubuntu16.04.deb
    - cd backend
    - mvn -Dmaven.test.skip clean package
    - rm jar_file/group4-software-analytics-0.0.1-SNAPSHOT.jar
    - cp target/group4-software-analytics-0.0.1-SNAPSHOT.jar jar_file
  stage: build
  tags:
    - analytics
# build the frontend
build_frontend:
  image: node:10
  script:
    - cd frontend
    - npm i
    - npm run build
  stage: build
  tags:
    - analytics

############################################################
#test

# Test stage jobs


test_backend:
  stage: test
  tags:
    - analytics
  services:
    - mongo
  script:
    - apt-get update
    - apt-get -y install sudo
    - apt-get -y install git
    - apt-get -y install curl
    - apt-get -y install libcurl3
    - apt-get -y install libarchive13
    - apt-get -y install maven
    - apt-get -y install openjdk-8-jdk
    - curl http://131.123.42.38/lmcrs/v1.0.0/srcml_1.0.0-1_ubuntu16.04.deb --output srcml_1.0.0-1_ubuntu16.04.deb
    - dpkg -i srcml_1.0.0-1_ubuntu16.04.deb
    - cd backend
    - mvn -Dmaven.test.skip clean package
    - mvn --batch-mode verify sonar:sonar
      -Dspring.data.mongodb.uri="mongodb://mongo:27017/"
      -Dsonar.host.url="http://rio.inf.usi.ch:9000/"
      -Dsonar.login="group4"
      -Dsonar.password="group4"
      -Dsonar.analysis.mode=publish
      -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHA
      -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME
      -Dsonar.gitlab.project_id=$CI_PROJECT_ID
  dependencies:
    - build_backend
########################################################
## deploy
#deploy_app:first:
#  stage: deploy
#  tags:
#    - analytics
#  script:
#    - cd backend
#    - mvn -Dmaven.test.skip clean package
#    - cp target/group4-software-analytics-0.0.1-SNAPSHOT.jar src
#
#
variables:
    IMAGE_TAG_LATEST: sample:latest
docker-build:
  image: docker:latest
  # Official docker image.
  stage: deploy
  tags:
    - analytics
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - cd backend 
    - docker build -t $IMAGE_TAG_LATEST ./
    - docker tag $IMAGE_TAG_LATEST $CI_REGISTRY_USER/$IMAGE_TAG_LATEST
    - docker push $CI_REGISTRY_USER/$IMAGE_TAG_LATEST



    
##################################################
